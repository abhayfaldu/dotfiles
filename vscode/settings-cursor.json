{
  "editor.formatOnType": false,
  "editor.formatOnSave": false,
  "editor.formatOnPaste": false,
  "scm.showHistoryGraph": false,
  "update.mode": "manual",
  "extensions.autoUpdate": true,
  "cSpell.ignoreWords": [
    "MPID",
    "mpid",
    "mparticle",
    "adonisjs",
    "punchh",
    "reactotron",
    "proto",
    "reactnative",
    "gaurav",
    "gauravds",
    "sharma",
    "redeemable",
    "Signup",
    "redeemables",
    "gorm",
    "repo",
    "repos",
    "bson",
    "rcvr",
    "rbac",
    "abhay",
    "faldu",
    "abhayfaldu"
  ],
  "editor.renderWhitespace": "all",
  "editor.rulers": [120],
  "search.useIgnoreFiles": false,
  "search.quickOpen.includeSymbols": false,
  "search.exclude": {
    "**/node_modules": false,
    "**/bower_components": true
  },
  "workbench.editor.enablePreviewFromQuickOpen": false,
  "explorer.confirmDragAndDrop": false,
  "extensions.ignoreRecommendations": false,
  "explorer.confirmDelete": false,
  "workbench.startupEditor": "newUntitledFile",
  "workbench.iconTheme": "material-icon-theme",
  "breadcrumbs.enabled": true,
  "liveServer.settings.donotShowInfoMsg": true,
  "liveServer.settings.donotVerifyTags": true,
  "editor.suggestSelection": "first",
  "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
  "javascript.suggest.autoImports": false,
  "terminal.integrated.fontFamily": "MesloLGS NF",
  "update.showReleaseNotes": false,
  "git.fetchOnPull": true,
  "diffEditor.ignoreTrimWhitespace": true,
  "editor.insertSpaces": true,
  "editor.detectIndentation": true,
  "html.format.indentHandlebars": true,
  "html.format.indentInnerHtml": true,
  "files.associations": {
    "*.edge": "edge"
  },
  "todohighlight.keywords": [
    {
      "text": "DEBUG:",
      "color": "white",
      "backgroundColor": "#40E0D0",
      "overviewRulerColor": "white"
    },
    {
      "text": "REVIEW:",
      "color": "black",
      "backgroundColor": "#DFFF00",
      "overviewRulerColor": "black"
    },
    {
      "text": "TOPIC:",
      "color": "white",
      "backgroundColor": "#6495ED",
      "overviewRulerColor": "white",
      "isWholeLine": true
    },
    {
      "text": "MARK:",
      "color": "black",
      "backgroundColor": "#CCCCFF",
      "overviewRulerColor": "black",
      "isWholeLine": true
    },
    {
      "text": "NOTE:",
      "color": "black",
      "backgroundColor": "#CCCCFF",
      "overviewRulerColor": "black"
    },
    {
      "text": "HACK:",
      "color": "white",
      "backgroundColor": "#ff0000",
      "isWholeLine": false
    },
    {
      "text": "ERROR:",
      "color": "white",
      "backgroundColor": "#cc0000",
      "isWholeLine": false
    },
    {
      "text": "WIP:",
      "color": "white",
      "backgroundColor": "#ff0000"
    },
    {
      "text": "DONE:",
      "color": "white",
      "backgroundColor": "green"
    },
    {
      "text": "NOT-DONE:",
      "color": "white",
      "backgroundColor": "purple"
    }
  ],
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "[python]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[markdown]": {
    "editor.wordWrap": "off",
    "editor.quickSuggestions": {
      "comments": "off",
      "strings": "off",
      "other": "off"
    },
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[vue]": {
    "editor.defaultFormatter": "Vue.volar"
  },
  "[scss]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[python]": {
    "editor.formatOnType": false
  },
  "[edge]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "editor.stickyTabStops": true,
  "workbench.editorAssociations": {
    "*.ipynb": "jupyter.notebook.ipynb",
    "*.glb": "default"
  },
  "terminal.integrated.tabs.enabled": true,
  "explorer.compactFolders": false,
  "git.confirmSync": false,
  "security.workspace.trust.untrustedFiles": "open",
  "cSpell.userWords": [
    "aadhar",
    "Apiservice",
    "axios",
    "builtup",
    "composables",
    "containerw",
    "Datatable",
    "drei",
    "duotune",
    "ecommerce",
    "Encryptor",
    "foir",
    "gstin",
    "GSTR",
    "healthcheck",
    "hset",
    "ifsc",
    "itemgroups",
    "japa",
    "klass",
    "luxon",
    "Navv",
    "Pantasign",
    "Phonepe",
    "pincode",
    "pino",
    "Presign",
    "Pulumi",
    "RDBMS",
    "Rocketseat",
    "snakecase",
    "sublocation",
    "Swal",
    "sweetalert",
    "tailwindcss",
    "toastification",
    "upgradation",
    "Verasys",
    "VITE",
    "vueform",
    "vuex",
    "webledger",
    "WORKBOARD",
    "Wortal"
  ],
  "typescript.updateImportsOnFileMove.enabled": "always",
  "terminal.integrated.enableMultiLinePasteWarning": "auto",
  "editor.fontFamily": "\"Fira Code\",\"monospace\"",
  "editor.fontLigatures": true,
  "terminal.integrated.shellIntegration.enabled": true,
  "aws.suppressPrompts": {
    "codeWhispererNewWelcomeMessage": true
  },
  "diffEditor.wordWrap": "off",
  "editor.wordWrap": "off",
  "editor.largeFileOptimizations": false,
  "editor.inlineSuggest.enabled": true,
  "editor.guides.bracketPairs": true,
  "editor.tabSize": 2,
  "prettier.jsxSingleQuote": true,
  "prettier.singleQuote": true,
  "prettier.semi": false,
  "prettier.useEditorConfig": false,
  "prettier.printWidth": 150,
  "prettier.tabWidth": 2,
  "prettier.trailingComma": "all",
  "redhat.telemetry.enabled": true,
  "yaml.customTags": [
    "!And",
    "!And sequence",
    "!If",
    "!If sequence",
    "!Not",
    "!Not sequence",
    "!Equals",
    "!Equals sequence",
    "!Or",
    "!Or sequence",
    "!FindInMap",
    "!FindInMap sequence",
    "!Base64",
    "!Join",
    "!Join sequence",
    "!Cidr",
    "!Ref",
    "!Sub",
    "!Sub sequence",
    "!GetAtt",
    "!GetAZs",
    "!ImportValue",
    "!ImportValue sequence",
    "!Select",
    "!Select sequence",
    "!Split",
    "!Split sequence"
  ],
  "editor.multiCursorModifier": "alt",
  "git.enableSmartCommit": true,
  "editor.fontSize": 13,
  "vim.highlightedyank.enable": true,
  "vim.highlightedyank.textColor": "rgb(0,0,0)",
  "editor.mouseWheelZoom": true,
  "terminal.integrated.mouseWheelZoom": true,
  "vim.smartRelativeLine": true,
  "editor.cursorSurroundingLines": 8,
  "accessibility.signals.chatRequestSent": {
    "sound": "off",
    "announcement": "off"
  },
  "accessibility.signals.chatResponseReceived": {
    "sound": "off"
  },
  "accessibility.signals.clear": {
    "sound": "off",
    "announcement": "off"
  },
  "accessibility.signals.lineHasBreakpoint": {
    "sound": "off"
  },
  "accessibility.signals.lineHasFoldedArea": {
    "sound": "off"
  },
  "accessibility.signals.lineHasWarning": {
    "sound": "off"
  },
  "accessibility.signals.noInlayHints": {
    "sound": "off"
  },
  "accessibility.signals.notebookCellCompleted": {
    "sound": "off",
    "announcement": "off"
  },
  "accessibility.signals.notebookCellFailed": {
    "sound": "off"
  },
  "accessibility.signals.onDebugBreak": {
    "sound": "off"
  },
  "accessibility.signals.positionHasError": {
    "announcement": "off"
  },
  "accessibility.signals.positionHasWarning": {
    "announcement": "off"
  },
  "accessibility.signals.progress": {
    "announcement": "off"
  },
  "accessibility.signals.taskCompleted": {
    "sound": "off"
  },
  "accessibility.signals.taskFailed": {
    "sound": "off"
  },
  "accessibility.signals.terminalCommandFailed": {
    "announcement": "off"
  },
  "accessibility.signals.terminalCommandSucceeded": {
    "announcement": "off"
  },
  "accessibility.signals.terminalQuickFix": {
    "sound": "off"
  },
  "accessibility.signals.voiceRecordingStopped": {
    "sound": "off"
  },
  "accessibility.signals.diffLineDeleted": {
    "sound": "off"
  },
  "todohighlight.isEnable": true,
  "files.autoSaveDelay": 1000,
  "errorLens.delay": 500,
  "diffEditor.maxComputationTime": 1000,
  "splitHTMLAttributes.sortOrder": [
    "as",
    "^v-if",
    "^v-else",
    "^v-show",
    "^v-for",
    "^key",
    "^:key",
    "^v-model",
    "^v-",
    "^:",
    "^@click",
    "^@",
    "^id",
    "^:id",
    "^class",
    "^:class",
    "^.*=\""
  ],
  "material-icon-theme.hidesExplorerArrows": true,
  "workbench.tree.renderIndentGuides": "onHover",
  "editor.scrollbar.horizontalScrollbarSize": 8,
  "editor.scrollbar.verticalScrollbarSize": 8,
  "editor.cursorSmoothCaretAnimation": "off",
  "editor.lineHeight": 2.0,
  "files.insertFinalNewline": true,
  "terminal.integrated.lineHeight": 1.3,
  "editor.minimap.renderCharacters": false,
  "launch": {
    "version": "0.2.0",
    "configurations": [
      {
        "type": "chrome",
        "request": "launch",
        "name": "vuejs: chrome",
        "url": "http://localhost:8080",
        "webRoot": "${workspaceFolder}/src",
        "breakOnLoad": true,
        "sourceMapPathOverrides": {
          "webpack:///src/*": "${webRoot}/*"
        }
      },
      {
        "name": "react-native",
        "program": "${workspaceRoot}/.vscode/launchReactNative.js",
        "type": "reactnative",
        "request": "attach",
        "sourceMaps": true,
        "cwd": "${workspaceFolder}"
      },
      {
        "name": "node current file",
        "type": "node",
        "request": "launch",
        "program": "${file}"
      },
      {
        "name": "node cli",
        "type": "node",
        "request": "launch",
        "program": "${workspaceRoot}/ace",
        "env": {},
        "args": ["db:drop"],
        "trace": "error"
      },
      {
        "name": "node server.js",
        "type": "node",
        "request": "launch",
        "program": "${workspaceFolder}/server.js"
      },
      {
        "name": "node attach to process",
        "type": "node",
        "request": "attach",
        "processId": "${command:PickProcess}"
      },
      {
        "name": "Node: Nodemon",
        "type": "node",
        "request": "attach",
        "processId": "${command:PickProcess}",
        "restart": true,
        "protocol": "inspector"
      },
      {
        "name": "golang current file",
        "debugAdapter": "dlv-dap",
        "type": "go",
        "request": "launch",
        "mode": "debug",
        "program": "${file}"
      },
      {
        "name": "golang main.go",
        "debugAdapter": "dlv-dap",
        "type": "go",
        "request": "launch",
        "mode": "debug",
        "program": "${workspaceRoot}/main.go",
        "env": {},
        "args": [],
        "trace": "error"
      },
      {
        "name": "golang main.go vk",
        "debugAdapter": "dlv-dap",
        "type": "go",
        "request": "launch",
        "mode": "auto",
        "program": "${workspaceRoot}/main.go",
        "env": {},
        "args": [],
        "trace": "error"
      },
      {
        "name": "golang main.go cli",
        "debugAdapter": "dlv-dap",
        "type": "go",
        "request": "launch",
        "mode": "debug",
        "program": "${workspaceRoot}/main.go",
        "env": {},
        "args": ["setup_ci", "cicis"],
        "trace": "error"
      },
      {
        "name": "server: golang main.go",
        "debugAdapter": "dlv-dap",
        "type": "go",
        "request": "launch",
        "mode": "debug",
        "program": "${workspaceRoot}/main.go",
        "env": {
          "INSTANCE_TYPE": "server"
        },
        "args": [],
        "trace": "error"
      },
      {
        "name": "worker@3001: golang main.go",
        "debugAdapter": "dlv-dap",
        "type": "go",
        "request": "launch",
        "mode": "debug",
        "program": "${workspaceRoot}/main.go",
        "env": {
          "INSTANCE_TYPE": "worker",
          "PORT": "3001"
        },
        "args": [],
        "trace": "error"
      },
      {
        "name": "Python: Debug Console",
        "type": "python",
        "request": "launch",
        "program": "${file}",
        "console": "internalConsole",
        "justMyCode": true,
        "envFile": "${workspaceFolder}/.env"
      },
      {
        "name": "Python file",
        "type": "python",
        "request": "launch",
        "program": "${file}",
        "console": "integratedTerminal",
        "justMyCode": true,
        "envFile": "${workspaceFolder}/.env"
      },
      {
        "name": "INSTANCE_TYPE=flow golang main.go",
        "debugAdapter": "dlv-dap",
        "type": "go",
        "request": "launch",
        "mode": "debug",
        "program": "${workspaceRoot}/main.go",
        "env": {
          "INSTANCE_TYPE": "flows",
          "PORT": "3002"
        },
        "args": [],
        "trace": "error"
      }
    ]
  },
  "vim.useSystemClipboard": true,
  "terminal.integrated.env.osx": {},
  "console-ninja.featureSet": "Community",
  "debug.console.closeOnEnd": true,
  "editor.accessibilitySupport": "off",
  "editor.stickyScroll.maxLineCount": 1,
  "editor.stickyScroll.scrollWithEditor": false,
  "workbench.tree.enableStickyScroll": false,
  "workbench.tree.stickyScrollMaxItemCount": 1,
  "terminal.integrated.stickyScroll.maxLineCount": 1,
  "diffEditor.renderSideBySide": true,
  "workbench.editor.tabActionLocation": "left",
  "[svg]": {
    "editor.defaultFormatter": "jock.svg"
  },
  "workbench.sideBar.location": "left",
  "vim.enableNeovim": true,
  "supermaven.enable": {
    "*": false
  },
  "[go]": {
    "editor.defaultFormatter": "golang.go"
  },
  "diffEditor.experimental.showMoves": true,
  "workbench.editor.enablePreview": false,
  "accessibility.signals.lineHasError": {
    "sound": "off"
  },
  "accessibility.signals.lineHasInlineSuggestion": {
    "sound": "off"
  },
  "vscode_custom_css.imports": ["file:///Users/abhayfaldu/Developer/vscode-custom-css/custom.css"],
  "editor.linkedEditing": true,
  "editor.tabCompletion": "on",
  "cursor.cpp.enablePartialAccepts": true,
  "database-client.autoSync": true,
  "gitlens.views.repositories.showIncomingActivity": true,
  "gitlens.views.workspaces.showIncomingActivity": true,
  "codesnap.backgroundColor": "#8A939B",
  "svg.preview.mode": "svg",
  "gitlens.ai.generateCommitMessage.customInstructions": "keep the commit message consize",
  "errorLens.enabled": false,
  "workbench.activityBar.orientation": "vertical",
  "editor.minimap.sectionHeaderFontSize": 8,
  "editor.minimap.size": "fill",
  "cursor.cmdk.useThemedDiffBackground": true,
  "terminal.integrated.fontSize": 12,
  "workbench.colorTheme": "Bearded Theme Coffee",
  "cursor.diffs.useCharacterLevelDiffs": true,
  "bootstrapIntelliSense": {
    "enable": true,
    "bsVersion": "5.2.1",
    "useLocalFile": false,
    "cssFilePath": "",
    "languageSupport": []
  },
  "vue.autoInsert.dotValue": true,
  "editor.minimap.enabled": true,
  "cursor.terminal.usePreviewBox": true,
  "vue.server.hybridMode": true,
  "window.commandCenter": true,
  "workbench.colorCustomizations": {
  },
  "editor.tokenColorCustomizations": {
    "textMateRules": [
  //     {
  //       "scope": "punctuation.accessor",
  //       "settings": {
  //         "foreground": "#d7d7d7" // Change to any color you like
  //       }
  //     },
  //     {
  //       "scope": "punctuation.terminator",
  //       "settings": {
  //         "foreground": "#d7d7d7" // Change for semicolons
  //       }
  //     },
  //     {
  //       "scope": "punctuation.separator",
  //       "settings": {
  //         "foreground": "#d7d7d7" // Change for commas, colons, etc.
  //       }
  //     },
  //     {
  //       "scope": "keyword.operator",
  //       "settings": {
  //         "foreground": "#d7d7d7" // Change for operators like : and ...
  //       }
  //     },
      {
        "scope": [
          "comment",
          "punctuation.definition.comment" // <<< this line is important
        ],
        "settings": {
          "foreground": "#ffffff77", // nice green (you can pick your own color)
          "fontStyle": "italic"
        }
      }
    ]
  },
  "errorLens.enabledDiagnosticLevels": [
    "warning",
    "info",
    "error"
  ],
  "files.autoSave": "afterDelay",
}
